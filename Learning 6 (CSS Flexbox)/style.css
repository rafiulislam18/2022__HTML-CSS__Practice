* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.container1 {
    width: 800px;
    padding: 20px;
    margin: 0 auto;
    background-color: #ddd;
    display: flex;
    gap: 2rem;
    flex-direction: row-reverse;
}

.container2 {
    width: 800px;
    padding: 20px;
    margin: 0 auto;
    background-color: #ddd;
    display: flex;
    gap: 2rem;
    flex-wrap: wrap;
}

.container3 {
    width: 800px;
    padding: 20px;
    margin: 0 auto;
    background-color: #ddd;
    display: flex;
    gap: 2rem;
    flex-flow: row-reverse wrap-reverse;
}

.container4 {
    width: 800px;
    padding: 20px;
    margin: 0 auto;
    background-color: #ddd;
    display: flex;
    justify-content: space-evenly;
}

.container5 {
    width: 800px;
    padding: 20px;
    margin: 0 auto;
    background-color: #ddd;
    display: flex;
    align-items: center;
    align-content: center;
    gap: 2rem;
}

/* justify-content works horizontally (x) & align-items + align-content works vertically (y) */

.container6 {
    width: 950px;
    padding: 20px;
    margin: 0 auto;
    background-color: #ddd;
    display: flex;
    gap: 1rem;
    height: 400px;
}

.box {
    width: 150px;
    height: 150px;
    border-radius: 5px;
}

.red {
    background-color: red;
}

.green {
    background-color: green;
}

.blue {
    background-color: blue;
}

.red1 {
    background-color: red;
    height: 200px;
}

.green1 {
    background-color: green;
    height: 300px;
}

.blue1 {
    background-color: blue;
    height: 150px;
}

.red2 {
    background-color: red;
    order: 2;
    flex-shrink: 2;
}

.green2 {
    background-color: green;
    order: 1;
    flex: 2 0 250px;
}

.blue2 {
    background-color: blue;
    order: 3;
    align-self: flex-end;
}

/* We can use flex-grow instead of flex-shrink property for other purposes */